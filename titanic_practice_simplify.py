# -*- coding: utf-8 -*-
#"""titanic_practice_simplify.ipynb

#Automatically generated by Colaboratory.

# Original file is located at
#     https://colab.research.google.com/drive/1INP8yOfz1ufHQ3VSDS8Tx9rv9H1WH3aH
# """
import pandas as pd
from sklearn.model_selection import train_test_split
import pickle
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

def get_title(name):
  if '.' in name:
    return name.split(',')[1].split('.')[0].strip()
  else:
    return 'NaN'
def sample_title(name):
  title = get_title(name)
  if title in ['Master','Dr','Major','Col','Don','Mlle','Capt','the Countess','Rev','Jonkheer']:
    return 'honor'
  elif title in ['Mme','Mrs','Ms','Lady','Miss']:
    return 'Mrs'
  else:
    return 'Mr'

#"""模型整理與訓練階段"""

df = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/train.csv")
df.loc[df['Age']>70,'Age']= df.Age.median()
df.loc[df['Fare']>300,'Fare']=300
df['Age'].fillna(df.Age.median(),inplace = True)
df.Embarked.fillna('S',inplace=True)
df['Title'] = df.Name.map(sample_title)
df.drop(['Cabin','Name','Ticket'],axis = 1,inplace = True)
df.Sex.replace(('male','female'),(0,1),inplace=True)
df.Title.replace(('Mr','Mrs','honor'),(0,1,2),inplace=True)
df.Embarked.replace(('S','C','Q'),(0,1,2),inplace=True)
y = df['Survived']
x = df.drop(['Survived','PassengerId'],axis=1)
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.1)

random_forest = RandomForestClassifier()
random_forest.fit(x_train,y_train)
y_predict = random_forest.predict(x_test)
accur = round(accuracy_score(y_test,y_predict)*100,2)
print('accuracy is = {}'.format(accur))
pickle.dump(random_forest,open('titanic_model.model','wb'))

#"""測試模型結果階段"""

testData = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/test.csv')
testData['Title'] = testData.Name.map(sample_title)
testData.drop(['Name','Ticket','Cabin'],axis=1,inplace=True)
testData['Age'].fillna(testData.Age.median(),inplace = True)
testData.Fare.fillna(testData.Fare.median(),inplace=True)
testData.Embarked.fillna('S',inplace=True)
testData.Sex.replace(('male','female'),(0,1),inplace=True)
testData.Title.replace(('Mr','Mrs','honor'),(0,1,2),inplace=True)
testData.Embarked.replace(('S','C','Q'),(0,1,2),inplace=True)
trainData = testData.drop('PassengerId',axis=1)
prediction = random_forest.predict(trainData)
output = pd.DataFrame({"PassengerId":testData.PassengerId,"Survived":prediction})
output.to_csv('titanic_predict.csv',index=False)